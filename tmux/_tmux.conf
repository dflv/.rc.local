# status bar

set-option -g status on
set-option -g status-interval 1
set-option -g status-justify left
set-option -g status-keys vi
set-option -g status-position bottom
set-option -g status-style fg=colour31,bg=colour235
set-option -g status-left-length 20
set-option -g status-left-style default
set-option -g status-left "#[fg=colour31]#H #[fg=colour31]| #[default]"
set-option -g status-right-length 30
set-option -g status-right-style default
set-option -g status-right " #[fg=colour31,bg=default]%l:%M %p %a %Y-%m-%d"
set-window-option -g window-status-style fg=colour244
set-window-option -g window-status-style bg=default
set-window-option -g window-status-current-style fg=colour31
set-window-option -g window-status-current-style bg=default

# use ZSH
set-option -g default-shell /bin/zsh

# default window title colors
### set-window-option -g window-status-fg white
### set-window-option -g window-status-bg default
### set-window-option -g window-status-attr dim

# active window title colors
### set-window-option -g window-status-current-fg white
### set-window-option -g window-status-current-bg default
### set-window-option -g window-status-current-attr bright

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Highlight active window
### set-window-option -g window-status-current-bg blue

# auto window rename
### set-window-option -g automatic-rename

### disable auto-rename
set-option -g allow-rename off

# rm mouse mode fail ### disabled it due to no such a setting in tmux
# set -g mode-mouse off

# color
set -g default-terminal "screen-256color"


### added by dafu
set-option -g base-index 1
set-option -g display-time 5000
set-option -g repeat-time 1000
set-option -g status-keys vi
### set-option -g status-utf8 on

set-window-option -g mode-keys vi
### set-window-option -g utf8 on

set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# up
bind-key k select-pane -U
# down
bind-key j select-pane -D
# left
bind-key h select-pane -L
# right
bind-key l select-pane -R

bind-key z kill-session

bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

### enable vi-style copy/paste
# override hotkey o
bind-key o copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# bind P paste-buffer
# override hotkey w
bind-key w paste-buffer

### enlarge scrollback limit
set-option -g history-limit 10000

### set the current patch when creating windows
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

### https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
### bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#!/bin/bash

if [ "$1" != "" ];
then
    # idx files.to.index.KEYWORD or KEYWORD directly

    to_idx=$(basename ${1})
    prefix_of_to_idx=${to_idx:0:15}
    if [ "$prefix_of_to_idx" == "files.to.index." ];
    then
        subfix_of_to_idx=${to_idx:15}
        FILES_TO_INDEX=$to_idx
    else
        subfix_of_to_idx=$to_idx
        FILES_TO_INDEX=./files.to.index.$to_idx
    fi
    AG_FILES=ag.files.$subfix_of_to_idx
    CSCOPE_FILES=cscope.*.$subfix_of_to_idx
    TAGS_FILES=tags.$subfix_of_to_idx
else
    FILES_TO_INDEX=./files.to.index
    AG_FILES=ag.files
    CSCOPE_FILES=cscope.*
    TAGS_FILES=tags
fi

# by all means, just remove the links blindly.
unlink ag.files >& /dev/null
unlink cscope.in.out >& /dev/null
unlink cscope.out >& /dev/null
unlink cscope.po.out >& /dev/null
unlink tags >& /dev/null
# and the sub-fixes also.
rm -f ag.files.* cscope.* tags.*

if [ -e "$FILES_TO_INDEX" ];
then
    echo "generate indexes according to $FILES_TO_INDEX ..."

    tmp_ag_files=$AG_FILES.`openssl rand -hex 16`
    tmp_files_to_index=$FILES_TO_INDEX.`openssl rand -hex 16`
    # keep one copy for multi-instanced lines
    sort -u $FILES_TO_INDEX > $tmp_files_to_index.000
    while IFS='' read -r line || [[ -n "$line" ]];
    do
        # remove the lines whose first char is "#"
        first_char=${line:0:1}
        if [ "$first_char" != "#" ] && [ "$line" != "" ];
        then
            if [ -f "$line" ];
            then
                echo "$line" >> $tmp_ag_files
                last_two_chars=${line: -2}
                if [ "$last_two_chars" == ".c" ] || [ "$last_two_chars" == ".S" ] || [ "$last_two_chars" == ".h" ];
                then
                    echo "$line" >> $tmp_files_to_index.001
                fi
            elif [ -d "$line" ];
            then
                # just add header files
               find $line -name "*.h" | tee -a $tmp_ag_files $tmp_files_to_index.001 >& /dev/null
            fi
        fi
    done < "$tmp_files_to_index.000"
    sort -u $tmp_ag_files > $AG_FILES
    sort -u $tmp_files_to_index.001 > $tmp_files_to_index.002
    sync

    cscope -bkq -i$tmp_files_to_index.002 &
    ctags -R -L $tmp_files_to_index.002 &
    wait
    rm -f $tmp_ag_files
    rm -f $tmp_files_to_index.*

    if [ "$1" != "" ];
    then
        mv cscope.in.out cscope.in.out.$subfix_of_to_idx
        mv cscope.out cscope.out.$subfix_of_to_idx
        mv cscope.po.out cscope.po.out.$subfix_of_to_idx
        mv tags tags.$subfix_of_to_idx
        ln -s ag.files.$subfix_of_to_idx ag.files
        ln -s cscope.in.out.$subfix_of_to_idx cscope.in.out
        ln -s cscope.out.$subfix_of_to_idx cscope.out
        ln -s cscope.po.out.$subfix_of_to_idx cscope.po.out
        ln -s tags.$subfix_of_to_idx tags
    fi
else
    echo "generate full indexes ..."
    find . -name "*.[cSh]" > ag.files
    cscope -bkRq &
    ctags -R &
    wait
fi

### for cctree built from ccglue.sourceforge.net
### ccglue -S cscope.out -o cctree.out

# status bar
set -g status-interval 1
set -g status-justify left # center align window list
set -g status-left-length 20
set -g status-right-length 140
### set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-left '#[fg=green]#H #[fg=black]| #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# default statusbar colors
set -g status-fg white
set -g status-bg default
### set -g status-attr bright

# use ZSH
set-option -g default-shell /bin/zsh

# default window title colors
### set-window-option -g window-status-fg white
### set-window-option -g window-status-bg default
### set-window-option -g window-status-attr dim

# active window title colors
### set-window-option -g window-status-current-fg white
### set-window-option -g window-status-current-bg default
### set-window-option -g window-status-current-attr bright

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Highlight active window
### set-window-option -g window-status-current-bg blue

# auto window rename
### set-window-option -g automatic-rename

### disable auto-rename
set-option -g allow-rename off

# rm mouse mode fail ### disabled it due to no such a setting in tmux
# set -g mode-mouse off

# color
set -g default-terminal "screen-256color"


### added by dafu
set-option -g base-index 1
set-option -g display-time 5000
set-option -g repeat-time 1000
set-option -g status-keys vi
### set-option -g status-right "#(date +%H:%M' ')"
### set-option -g status-right "#(date +%I:%M:%S' '%p' ')"
set-option -g status-right "#(date +%I:%M' '%p' ')"
set-option -g status-right-length 15
### set-option -g status-utf8 on

set-window-option -g mode-keys vi
### set-window-option -g utf8 on

set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# up
bind-key k select-pane -U
# down
bind-key j select-pane -D
# left
bind-key h select-pane -L
# right
bind-key l select-pane -R

bind-key z kill-session

bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

### enable vi-style copy/paste
bind-key C-o copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# bind P paste-buffer
bind-key C-w paste-buffer

### enlarge scrollback limit
set-option -g history-limit 5000

### set the current patch when creating windows
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

### https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
### bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
